# Declarative rule engine for score adjustments and feedback
# Each rule has implicit AND conditions; OR groupings via 'any_of' list blocks.

version: 2

rating_rules:
  - id: lower_accuracy_if_no_example
    when:
      response_contains_any: ["Dijkstra", "shortest path"]
      preferred_rewrite_missing_substring: ["complexity", "O(E log V)"]
    actions:
      adjust_dimension:
        dimension: accuracy
        delta: -0.5
      add_comment: "Accuracy penalized for missing time complexity reference."

  - id: boost_presentation_if_structured
    when:
      # Detect structure: word 'paso'/step, enumeration "1." or bullet '- '
      rewrite_regex_any:
        - "(?i)paso"  # keep Spanish variant in regex to match content
        - "(?i)1\\."
        - "\\n- "
    actions:
      adjust_dimension:
        dimension: presentation
        delta: 0.3
      add_comment: "Structured format improves presentation."

  - id: freshness_penalty_if_no_update
    when:
      not_contains_any: ["2024", "current", "recent"]
    actions:
      adjust_dimension:
        dimension: freshness
        delta: -0.4
      add_comment: "Missing reference to current / recent version context."

  - id: optimality_or_accuracy_guard
    when:
      any_of:
        - { response_contains_any: ["heap", "cola de prioridad"] }  # keep bilingual tokens
        - { response_contains_any: ["priority queue", "O(E log V)"] }
      min_total_length: 120
    actions:
      add_comment: "Recognized mention of efficient structure or explicit complexity (OR rule)."

  - id: boost_if_high_accuracy
    when:
      dimension_gt:
        accuracy: 4.5
    actions:
      adjust_dimension:
        dimension: optimality
        delta: 0.2
      add_comment: "Slight optimality boost due to high base accuracy."

  - id: penalize_low_optimality
    when:
      dimension_lt:
        optimality: 2.5
    actions:
      adjust_dimension:
        dimension: optimality
        delta: -0.3
      add_comment: "Penalty for very low initial optimality."

  - id: scoring_positive_signal
    when:
      response_contains_any: ["eficiente", "optimizado", "efficient", "optimized"]
    actions:
      increment_score: 2
      add_comment_template: "Efficiency signal detected (length_total={{signals.length_total}})."

  - id: flag_and_label_if_low_accuracy
    when:
      dimension_lt:
        accuracy: 2.0
    actions:
      set_flag: low_accuracy
      assign_label: needs_review
      add_comment: "Flagged for review due to low accuracy."

ranking_rules:
  - id: ensure_best_longer
    when:
      preferred_longer_than_second: true
    actions:
      add_ranking_feedback: "Top-ranked response is indeed more comprehensive."

rewrite_rules:
  - id: ensure_period
    when:
      ends_without_punct: true
    actions:
      append_text: "."

  - id: add_length_note
    when:
      shorter_than_min: true
    actions:
      append_note: true

feedback_priorities:
  add_comment: 10
  add_ranking_feedback: 5

decision:
  score_thresholds:
    excellent: 5
    good: 3
    neutral: 0
    weak: -1
